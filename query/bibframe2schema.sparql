###################################################################
# bibframe2schema.sparql
# Version v0.6
# 
# SPARQL Script to add Schema.org triples to Bibframe RDF description
# Assumes definition of bf:Work, bf:Instance
# 
# Designed as a query script for Bibframe2Schema schemaise.py script
#
# Part of the Bibframe2Schema.org Coumunity Group <https://www.w3.org/community/bibframe2schema/>
# Originators Richard Wallis / Osma Suominen
# Licenced under Creative Commons Licence CC0 <https://creativecommons.org/publicdomain/zero/1.0>
#
###################################################################

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX bflc: <http://id.loc.gov/ontologies/bflc/>
PREFIX schema: <http://schema.org/>
PREFIX rdau: <http://rdaregistry.info/Elements/u/>

INSERT {
	
    ?work a schema:CreativeWork, bf:Work, ?workPeriodicalType, ?plustype ;
      schema:workExample ?inst, ?elecInst ;
      schema:translationOfWork ?origwork ;
      schema:description ?desc ;
      schema:author ?creator ;
      schema:contributor ?contributor ;
      schema:inLanguage ?languageCode ;
      schema:about ?topic, ?subjectWork, ?subjectOrg, ?subjectPerson ;
      rdau:P60049 ?contentCategory ;
      schema:name ?workTitle ;
      schema:sdDatePublished "[[TODAY]]";
      schema:sdLicense [[SDLICENSE]];
      schema:sdPublisher [[SDPUBLISHER]].
      
	  [[SDPUBLISHERDESCRIPTION]]
  
      ?inst a schema:CreativeWork, schema:Product,schema:Product, bf:Instance, ?instPeriodicalType, ?plustype ;
        schema:exampleOfWork ?work ;
        schema:name ?instName ;
        schema:description ?desc, ?note ;
        schema:author ?creator ;
        schema:contributor ?contributor ;
        schema:inLanguage ?languageCode ;
        schema:about ?topic, ?subjectWork, ?subjectOrg, ?subjectPerson ;
        schema:isbn ?isbnVal ;
        schema:issn ?issnVal ;
        schema:datePublished ?publicationDate ;
        schema:publication ?publicationEvent ;
        schema:numberOfPages ?extent ;
        rdau:P60048 ?carrierCategory ;
        rdau:P60050 ?mediaCategory ;
        schema:identifier ?instanceId ;
        schema:isPartOf ?series ;
        schema:publisher ?publisherOrganization ;
        schema:sdDatePublished "[[TODAY]]";
        schema:sdLicense [[SDLICENSE]];
        schema:sdPublisher [[SDPUBLISHER]].
    
    ?item a schema:CreativeWork, schema:IndividualProduct, bf:Item, ?instPeriodicalType, ?plustype ;
      schema:exampleOfWork ?inst ;
      schema:name ?instName ;
      schema:description ?desc, ?note ;
      schema:author ?creator ;
      schema:contributor ?contributor ;
      schema:inLanguage ?languageCode ;
      schema:about ?topic, ?subjectWork, ?subjectOrg, ?subjectPerson ;
      schema:isbn ?isbnVal ;
      schema:issn ?issnVal ;
      schema:datePublished ?publicationDate ;
      schema:publication ?publicationEvent ;
      schema:numberOfPages ?extent ;
      rdau:P60048 ?carrierCategory ;
      rdau:P60050 ?mediaCategory ;
      schema:identifier ?instanceId ;
      schema:isPartOf ?series ;
      schema:publisher ?publisherOrganization ;
      schema:sku ?shelf ;
      schema:sdDatePublished "[[TODAY]]";
      schema:sdLicense [[SDLICENSE]];
      schema:sdPublisher [[SDPUBLISHER]].
      
  ?publicationEvent a schema:PublicationEvent ;
    schema:publishedBy ?publisherOrganization ;
    schema:location ?publicationPlace ;
    schema:startDate ?publicationDate .
  ?publicationPlace a schema:Place ;
    schema:name ?publicationPlaceName .
  ?instanceId a schema:PropertyValue ;
    schema:propertyID ?instanceIdSource ;
    schema:value ?instanceIdValue .
  ?publisherOrganization a schema:Organization ;
    schema:name ?publisherOrganizationLabel .
  ?creator a ?schemaCreatorType ;
    schema:name ?creatorLabel ;
    schema:birthDate ?creatorBirthDate ;
    schema:deathDate ?creatorDeathDate ;
    schema:identifier ?creatorId .
  ?creatorId a schema:PropertyValue ;
    schema:propertyID ?creatorIdentifierSource ;
    schema:value ?creatorIdentifierValue .
  ?contributor a ?schemaContributorType ;
    schema:name ?contributorLabel ;
    schema:birthDate ?contributorBirthDate ;
    schema:deathDate ?contributorDeathDate ;
    schema:identifier ?contributorId .
  ?contributorId a schema:PropertyValue ;
    schema:propertyID ?contributorIdentifierSource ;
    schema:value ?contributorIdentifierValue .
  ?elecInst a schema:Book, schema:CreativeWork, bf:Instance ;
    schema:exampleOfWork ?work ;
    schema:url ?elecUri ;
    schema:name ?instName ;
    schema:bookFormat schema:EBook .
  ?origwork a schema:CreativeWork, bf:Work, ?origworkType ;
    schema:workTranslation ?work ;
    schema:name ?origworkTitle ;
    schema:inLanguage ?origLanguageCode ;
    schema:issn ?origworkIssnValue ;
    schema:author ?creator .
  ?series a schema:CreativeWork, bf:Work, schema:CreativeWorkSeries ;
    schema:hasPart ?inst ;
    schema:name ?seriesTitleValue ;
    schema:issn ?seriesIssnValue .
  ?topic a schema:DefinedTerm;
    schema:name ?topicLabel .
  ?subjectWork a schema:CreativeWork, bf:Work ;
    schema:author ?subjectWorkAgent ;
    schema:name ?subjectWorkName .
  ?subjectWorkAgent a schema:Person ;
    schema:name ?subjectWorkAgentLabel ;
    schema:birthDate ?subjectWorkAgentBirthDate ;
    schema:deathDate ?subjectWorkAgentDeathDate .
  ?subjectOrg a schema:Organization ;
    schema:name ?subjectOrgName .
  ?subjectPerson a schema:Person ;
    schema:name ?subjectPersonLabel ;
    schema:birthDate ?subjectPersonBirthDate ;
    schema:deathDate ?subjectPersonDeathDate ;
    schema:identifier ?subjectPersonId .
  ?subjectPersonId a schema:PropertyValue ;
    schema:propertyID ?subjectPersonIdentifierSource ;
    schema:value ?subjectPersonIdentifierValue .
}
WHERE {
    
    ?work a bf:Work;
         bf:title/bf:mainTitle ?workTitle.
         OPTIONAL{ ?work bf:genreForm/rdfs:label ?genre. }
         OPTIONAL{ ?wrk bf:summary/rdfs:label ?desc. }
         OPTIONAL{ ?work a bf:Audio. BIND(schema:AudioObject as ?plustype).}
         OPTIONAL{ ?work a bf:Dataset. BIND(schema:Dataset as ?plustype).}
         OPTIONAL{ ?work a bf:Cartography. BIND(schema:Map as ?plustype).}
         OPTIONAL{ ?work a bf:StillImage. BIND(schema:ImageObject as ?plustype).}
         OPTIONAL{ ?work a bf:MovingImage. BIND(schema:VideoObject as ?plustype).}
         OPTIONAL{ ?work a bf:Multimedia. BIND(schema:MediaObject as ?plustype).}
         OPTIONAL{ ?work a bf:Text. BIND(schema:Book as ?plustype).}
  
  ?inst bf:instanceOf ?work .

  OPTIONAL { ?inst bf:title ?instTitle . }
  OPTIONAL { ?instTitle bf:mainTitle ?instMainTitle . }
  OPTIONAL { ?instTitle bf:subtitle ?instSubtitle }
  BIND(COALESCE(CONCAT(?instMainTitle, ' : ', ?instSubtitle), ?instMainTitle) AS ?instTitleCombined)
  OPTIONAL { ?instTitle bf:partNumber ?instPartNumber }
  OPTIONAL { ?instTitle bf:partName ?instPartName }
  BIND(COALESCE(
    CONCAT(?instTitleCombined, ' : ', ?instPartNumber, ', ', ?instPartName),
    CONCAT(?instTitleCombined, ' : ', ?instPartNumber),
    CONCAT(?instTitleCombined, ' : ', ?instPartName),
    ?instTitleCombined
  ) AS ?instNameRaw)
  BIND(REPLACE(?instNameRaw, '[ \\./]+$', '') AS ?instName)

  # instance-related properties, all optional
  OPTIONAL {
    {
      ?inst bf:issuance <http://id.loc.gov/vocabulary/issuance/serl>
    }
    UNION
    {
      ?inst bf:identifiedBy ?isbn .
      ?isbn a bf:Isbn .
      ?isbn rdf:value ?isbnValRaw .
      BIND(REPLACE(?isbnValRaw, '-', '') AS ?isbnVal)
    }
    UNION
    {
      ?inst bf:identifiedBy ?issn .
      ?issn a bf:Issn .
      ?issn rdf:value ?issnVal .
      BIND(schema:Periodical AS ?workPeriodicalType)
      BIND(schema:Periodical AS ?instPeriodicalType)
    }
    UNION
    {
      ?inst bf:provisionActivity ?publication .
	  ?publication a bf:ProvisionActivity.
	  BIND(?publication as ?publicationEvent)
	  OPTIONAL { ?publication bf:place ?publicationPlace . }
	  OPTIONAL { ?publication bf:date ?publicationDateRaw .
	      BIND(STR(?publicationDateRaw) AS ?publicationDate) }
	  OPTIONAL { ?publication bf:agent ?publisherOrganization . }
	}
	UNION {
      ?inst bf:provisionActivity ?publication .
	  OPTIONAL {
	      ?publication a bf:Publication .
	      ?publication bf:date ?publicationDateRaw .
	      BIND(STR(?publicationDateRaw) AS ?publicationDate)
	  }
      OPTIONAL {
        ?publication bf:place ?publicationPlace .
        ?publicationPlace rdfs:label ?publicationPlaceName .
      }
	  OPTIONAL {
        ?publication bf:agent ?publisherOrganization .
        ?publisherOrganization rdfs:label ?publisherOrganizationLabelRaw .
        BIND(REPLACE(?publisherOrganizationLabelRaw, '^(jakelija:)? *(.*?)(,? jakaja)?[ \\.]*$', '$2') AS ?publisherOrganizationLabel)
      }
    }
    UNION
    {
      ?inst bf:extent/rdfs:label ?extent .
    }
    UNION
    {
      ?inst bf:note/rdfs:label ?note .
    }
    UNION
    {
      ?elec bf:itemOf ?inst .
      ?elec bf:electronicLocator ?elecLoc .
      BIND(?inst AS ?elecInst) 
      OPTIONAL {
          # case 1: with a separate resource using bflc:locator
          ?elec bf:electronicLocator/bflc:target ?elecUri .
      }
      OPTIONAL {
          # case 2: plain URI
          ?elec bf:electronicLocator ?elecUriLiteral .
          BIND(IRI(?elecUriLiteral) AS ?elecUri)
      }
    }
    UNION {
        ?item a bf:Item;
           bf:itemOf ?inst.
           OPTIONAL{ ?itm bf:shelfMark/rdfs:label ?shelf. }
    }
    UNION
    {
      ?inst bf:carrier/rdfs:label ?carrierCategory .
    }
    UNION
    {
      ?inst bf:media/rdfs:label ?mediaCategory .
    }
    UNION
    {
      ?inst bf:identifiedBy ?instanceId .
      ?instanceId rdf:value ?instanceIdValue .
      ?instanceId bf:source/rdfs:label ?instanceIdSource .
    }
  }

  # ?creator is needed in many branches below, so it has to be bound
  # separately from the UNIONed blocks
  OPTIONAL {
    VALUES (?bfCreatorType ?schemaCreatorType) { (bf:Person schema:Person) (bf:Jurisdiction schema:Organization) (bf:Organization schema:Organization)}
    ?work bf:contribution ?creation .
    ?creation a bflc:PrimaryContribution .
    ?creation bf:agent ?creator .
    ?creator a ?bfCreatorType .
    ?creator rdfs:label ?creatorLabelRaw .
    BIND(REPLACE(?creatorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$1") AS ?creatorName)
    BIND(REPLACE(?creatorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$3") AS ?creatorBirth)
    BIND(IF(STR(?creatorBirth) != '', ?creatorBirth, ?unbound) as ?creatorBirthDate)
    BIND(REPLACE(?creatorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$4") AS ?creatorDeath)
    BIND(IF(STR(?creatorDeath) != '', ?creatorDeath, ?unbound) as ?creatorDeathDate)
    BIND(REPLACE(?creatorName, '[ ,\\.]+$', '') AS ?creatorLabel)
    OPTIONAL {
      ?creator bf:identifiedBy ?creatorId .
      ?creatorId rdf:value ?creatorIdentifierValue .
      ?creatorId bf:source/rdfs:label ?creatorIdentifierSource .
    }
  }

  # work-related properties, all optional
  OPTIONAL {
    {
      VALUES (?bfContributorType ?schemaContributorType) { (bf:Person schema:Person) (bf:Jurisdiction schema:Organization) (bf:Organization schema:Organization)}
      ?work bf:contribution ?contribution .
      FILTER NOT EXISTS { ?contribution a bflc:PrimaryContribution }
      ?contribution bf:agent ?contributor .
      ?contributor a ?bfContributorType .
      ?contributor rdfs:label ?contributorLabelRaw .
      BIND(REPLACE(?contributorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$1") AS ?contributorName)
      BIND(REPLACE(?contributorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$3") AS ?contributorBirth)
      BIND(IF(STR(?contributorBirth) != '', ?contributorBirth, ?unbound) as ?contributorBirthDate)
      BIND(REPLACE(?contributorLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$4") AS ?contributorDeath)
      BIND(IF(STR(?contributorDeath) != '', ?contributorDeath, ?unbound) as ?contributorDeathDate)
      BIND(REPLACE(?contributorName, '[ ,\\.]+$', '') AS ?contributorLabel)
      OPTIONAL {
        ?contributor bf:identifiedBy ?contributorId .
        ?contributorId rdf:value ?contributorIdentifierValue .
        ?contributorId bf:source/rdfs:label ?contributorIdentifierSource .
      }
    }
    UNION
    {
      ?work bf:translationOf ?origwork .
      { ?origwork bf:title/rdfs:label ?origworkTitleRaw }
      UNION
      { ?origwork bf:hasInstance/bf:title/rdfs:label ?origworkTitleRaw }
      BIND(REPLACE(?origworkTitleRaw, '[ ,\\.]+$', '') AS ?origworkTitle)
      OPTIONAL {
        ?origwork bf:hasInstance/bf:identifiedBy ?origworkIssn .
        ?origworkIssn a bf:Issn .
        ?origworkIssn rdf:value ?origworkIssnValue .
        BIND(schema:Periodical as ?origworkType)
      }
      OPTIONAL {
        ?origwork bf:language ?origLanguage .
        BIND(STRAFTER(STR(?origLanguage), 'http://id.loc.gov/vocabulary/languages/') as ?origLanguageCode)
      }
    }
    UNION
    {
      ?work bf:identifiedBy ?issn .
      ?issn a bf:Issn .
      ?issn rdf:value ?issnVal .
      BIND(schema:Periodical AS ?workPeriodicalType)
      BIND(schema:Periodical AS ?instPeriodicalType)
    }
    UNION
    {
      ?work bf:language ?language .
      FILTER NOT EXISTS { ?language bf:part [] }
      OPTIONAL {
        ?language rdf:value ?languageValue .
      }
      BIND(COALESCE(?languageValue, ?language) AS ?languageVal)
      FILTER (STRSTARTS(STR(?languageVal), 'http://id.loc.gov/vocabulary/languages/'))
      BIND(STRAFTER(STR(?languageVal), 'http://id.loc.gov/vocabulary/languages/') AS ?languageCode)
    }
    UNION
    {
      # Work as subject
      ?work bf:subject ?subjectWork .
      ?subjectWork a bf:Work .
      ?subjectWork bf:contribution/bf:agent ?subjectWorkAgent .
      ?subjectWorkAgent a bf:Person .
      ?subjectWorkAgent rdfs:label ?subjectWorkAgentLabelRaw .
      BIND(REPLACE(?subjectWorkAgentLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$1") AS ?subjectWorkAgentName)
      BIND(REPLACE(?subjectWorkAgentLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$3") AS ?subjectWorkAgentBirth)
      BIND(IF(STR(?subjectWorkAgentBirth) != '', ?subjectWorkAgentBirth, ?unbound) as ?subjectWorkAgentBirthDate)
      BIND(REPLACE(?subjectWorkAgentLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$4") AS ?subjectWorkAgentDeath)
      BIND(IF(STR(?subjectWorkAgentDeath) != '', ?subjectWorkAgentDeath, ?unbound) as ?subjectWorkAgentDeathDate)
      BIND(REPLACE(?subjectWorkAgentName, '[ ,\\.]+$', '') AS ?subjectWorkAgentLabel)
      ?subjectWork rdfs:label ?subjectWorkNameRaw .
      BIND(REPLACE(?subjectWorkNameRaw, '[ ,\\./]+$', '') AS ?subjectWorkName)
    }
    UNION
    {
      # Topic or Place as subject
      ?work bf:subject ?topic .
      { ?topic a bf:Topic } UNION { ?topic a bf:Place }
      ?topic rdfs:label ?topicLabel .
    }
    UNION
    {
      # Organization or Meeting as subject
      ?work bf:subject ?subjectOrg .
      ?subjectOrg rdfs:label ?subjectOrgNameRaw .
      BIND(REPLACE(?subjectOrgNameRaw, '[ ,\\.]+$', '') AS ?subjectOrgName)
      {
        { ?subjectOrg a bf:Organization } UNION { ?subjectOrg a bf:Meeting }
      }
    }
    UNION
    {
      # Person as subject
      ?work bf:subject ?subjectPerson .
      ?subjectPerson a bf:Person .
      ?subjectPerson rdfs:label ?subjectPersonLabelRaw .
      BIND(REPLACE(?subjectPersonLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$1") AS ?subjectPersonName)
      BIND(REPLACE(?subjectPersonLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$3") AS ?subjectPersonBirth)
      BIND(IF(STR(?subjectPersonBirth) != '', ?subjectPersonBirth, ?unbound) as ?subjectPersonBirthDate)
      BIND(REPLACE(?subjectPersonLabelRaw, "^(.+?)(, ([^,-]*[0-9]+)-([^,\\.]*[0-9]+)?)?,?\\.?$", "$4") AS ?subjectPersonDeath)
      BIND(IF(STR(?subjectPersonDeath) != '', ?subjectPersonDeath, ?unbound) as ?subjectPersonDeathDate)
      BIND(REPLACE(?subjectPersonName, '[ ,\\.]+$', '') AS ?subjectPersonLabel)
      OPTIONAL {
        ?subjectPerson bf:identifiedBy ?subjectPersonId .
        ?subjectPersonId rdf:value ?subjectPersonIdentifierValue .
        ?subjectPersonId bf:source/rdfs:label ?subjectPersonIdentifierSource .
      }
    }
    UNION
    {
      ?work bf:content/rdfs:label ?contentCategory .
    }
    UNION
    {
      ?work bf:hasSeries ?series .
      ?series rdfs:label ?seriesTitle .
      BIND(REPLACE(?seriesTitle, '[ ,;\\.]+$', '') AS ?seriesTitleValue)
      OPTIONAL {
        ?series bf:identifiedBy ?seriesIssn .
        ?seriesIssn a bf:Issn .
        ?seriesIssn rdf:value ?seriesIssnValueRaw .
        BIND(REPLACE(?seriesIssnValueRaw, '[ ;]+$', '') AS ?seriesIssnValue)
      }
    }
  }
}
